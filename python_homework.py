# Создать телефонный справочник с
# возможностью импорта и экспорта данных в
# формате .txt. Фамилия, имя, отчество, номер
# телефона - данные, которые должны находиться
# в файле.
# 1. Программа должна выводить данные
# 2. Программа должна сохранять данные в
# текстовом файле
# 3. Пользователь может ввести одну из
# характеристик для поиска определенной
# записи(Например имя или фамилию
# человека)
# 4. Использование функций. Ваша программа
# не должна быть линейной
def save_contacts_to_file(contacts, filename):
    with open(filename, 'w') as file:
        for contact in contacts:
            file.write(','.join([contact['Фамилия'], contact['Имя'], contact['Отчество'], contact['Телефон']]) + '\n')

def load_contacts_from_file(filename):
    contacts = []
    with open(filename, 'r', encoding='utf-8') as file:
        for line in file:
            contact_data = line.strip().split(',')
            contact = {'Фамилия': contact_data[0], 'Имя': contact_data[1], 'Отчество': contact_data[2], 'Телефон': contact_data[3]}
            contacts.append(contact)
    return contacts

def save_contacts_to_file(contacts, filename):
    with open(filename, 'w', encoding='utf-8') as file:
        for contact in contacts:
            file.write(','.join([contact['Фамилия'], contact['Имя'], contact['Отчество'], contact['Телефон']]) + '\n')
def display_contacts(contacts):
    for contact in contacts:
        print(', '.join([contact['Фамилия'], contact['Имя'], contact['Отчество'], contact['Телефон']]))

def add_contact(contacts):
    Фамилия = input("Введите фамилию: ")
    Имя = input("Введите имя: ")
    Отчество = input("Введите отчество: ")
    Телефон = input("Введите номер телефона: ")
    новый_контакт = {'Фамилия': Фамилия, 'Имя': Имя, 'Отчество': Отчество, 'Телефон': Телефон}
    contacts.append(новый_контакт)
    print("Контакт успешно добавлен.")

def update_contact(contacts):
    Фамилия = input("Введите фамилию контакта, который нужно изменить: ")
    Имя = input("Введите имя контакта, который нужно изменить: ")
    for contact in contacts:
        if contact['Фамилия'] == Фамилия and contact['Имя'] == Имя:
            contact['Фамилия'] = input("Введите новую фамилию: ")
            contact['Имя'] = input("Введите новое имя: ")
            contact['Отчество'] = input("Введите новое отчество: ")
            contact['Телефон'] = input("Введите новый номер телефона: ")
            print("Контакт успешно обновлен.")
            return
    print("Контакт не найден.")

def delete_contact(contacts):
    Фамилия = input("Введите фамилию контакта, который нужно удалить: ")
    Имя = input("Введите имя контакта, который нужно удалить: ")
    for contact in contacts:
        if contact['Фамилия'] == Фамилия and contact['Имя'] == Имя:
            contacts.remove(contact)
            print("Контакт успешно удален.")
            return
    print("Контакт не найден.")

def search_contacts(contacts):
    характеристика = input("Введите характеристику для поиска (Фамилия, Имя, Отчество или Телефон): ").capitalize()
    значение = input(f"Введите {характеристика}: ")
    found = False
    for contact in contacts:
        if значение in contact[характеристика]:
            print(', '.join([contact['Фамилия'], contact['Имя'], contact['Отчество'], contact['Телефон']]))
            found = True
    if not found:
        print("Контакт не найден.")

def main():
    filename = 'contacts.txt'
    try:
        contacts = load_contacts_from_file(filename)
    except FileNotFoundError:
        print("Файл с контактами не найден. Создается новый файл.")
        contacts = []

    while True:
        print("\nМеню:")
        print("1. Просмотреть контакты")
        print("2. Добавить контакт")
        print("3. Изменить контакт")
        print("4. Удалить контакт")
        print("5. Поиск контакта")
        print("6. Сохранить и выйти")
        print("7. Выйти без сохранения")
        choice = input("Выберите действие: ")

        if choice == '1':
            print("\nКонтакты:")
            display_contacts(contacts)
        elif choice == '2':
            add_contact(contacts)
        elif choice == '3':
            update_contact(contacts)
        elif choice == '4':
            delete_contact(contacts)
        elif choice == '5':
            search_contacts(contacts)
        elif choice == '6':
            save_contacts_to_file(contacts, filename)
            print("Данные сохранены в файл.")
            break
        elif choice == '7':
            print("Выход без сохранения.")
            break
        else:
            print("Некорректный ввод. Пожалуйста, выберите действие из списка.")
if __name__ == "__main__":
    main()
    
# логика программы:

# Загрузка контактов из файла:

# При запуске программы она пытается загрузить контакты из файла contacts.txt.
# Если файл существует, он читается, и каждая строка файла интерпретируется как контакт. 
# Каждая строка разделяется на части по запятой (,), и эти части используются для создания словаря контакта,
# который затем добавляется в список контактов.
# Если файл не существует или происходит ошибка при чтении, создается пустой список контактов.

# Главное меню:
# После загрузки контактов программа выводит главное меню, где пользователь может выбрать одно из действий.
# Возможные действия включают просмотр, добавление, изменение, удаление, поиск контактов, сохранение и выход.

# Просмотр контактов:
# При выборе этой опции программа выводит все контакты, которые были загружены из файла.
# Добавление контакта:
# Пользователь может добавить новый контакт, вводя информацию о фамилии, имени, отчестве и номере телефона.
# Новый контакт добавляется в список контактов.

# Изменение контакта:
# Пользователь может изменить существующий контакт, выбрав его по фамилии, имени или отчеству.
# Пользователю предлагается ввести новую информацию о контакте (фамилия, имя, отчество, номер телефона).
# Выбранный контакт обновляется в списке контактов.

# Удаление контакта:
# Пользователь может удалить существующий контакт, выбрав его по фамилии, имени или отчеству.
# Выбранный контакт удаляется из списка контактов.

# Поиск контактов:
# Пользователь может найти контакт, введя часть фамилии, имени, отчества или номера телефона.
# Если найдены контакты с соответствующей информацией, они выводятся на экран.

# Сохранение и выход:
# При выборе этой опции все контакты сохраняются в файл contacts.txt, затем программа завершается.
# Контакты сохраняются в формате строки, где каждый контакт представлен как четыре значения, разделенные запятой (,):
# фамилия, имя, отчество, номер телефона.

# Выйти без сохранения:
# При выборе этой опции программа завершается без сохранения изменений.

# Таким образом, программа обеспечивает управление списком контактов с помощью наглядного интерфейса меню,
# а также предоставляет функции для добавления, изменения, удаления и поиска контактов, а также сохранения и загрузки контактов из файла.






